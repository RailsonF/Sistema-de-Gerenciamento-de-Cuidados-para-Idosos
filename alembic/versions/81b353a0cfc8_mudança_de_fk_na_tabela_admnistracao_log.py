"""mudança de fk na tabela admnistracao_log

Revision ID: 81b353a0cfc8
Revises: 741974f9123f
Create Date: 2025-09-19 14:54:14.086868

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '81b353a0cfc8'
down_revision: Union[str, Sequence[str], None] = '741974f9123f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Apagar na ordem inversa da criação para respeitar as dependências
    op.drop_table('administracao_log')
    op.drop_table('prescricoes')
    op.drop_table('idosos')
    op.drop_table('medicamentos')
    op.drop_table('responsaveis')
    op.drop_table('usuarios')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('prescricoes',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('prescricoes_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('dosagem', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('horario_prescrito', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('id_idoso', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id_medicamento', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_idoso'], ['idosos.id'], name='prescricoes_id_idoso_fkey'),
    sa.ForeignKeyConstraint(['id_medicamento'], ['medicamentos.id'], name='prescricoes_id_medicamento_fkey'),
    sa.PrimaryKeyConstraint('id', name='prescricoes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_prescricoes_id'), 'prescricoes', ['id'], unique=False)
    op.create_table('usuarios',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome_completo', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('senha_hash', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('usuarios_pkey'))
    )
    op.create_index(op.f('ix_usuarios_email'), 'usuarios', ['email'], unique=True)
    op.create_table('medicamentos',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('medicamentos_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('unidade_medida', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='medicamentos_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_medicamentos_nome'), 'medicamentos', ['nome'], unique=False)
    op.create_index(op.f('ix_medicamentos_id'), 'medicamentos', ['id'], unique=False)
    op.create_table('responsaveis',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('responsaveis_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nome_completo', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cpf', sa.VARCHAR(length=11), autoincrement=False, nullable=True),
    sa.Column('telefone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='responsaveis_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_responsaveis_nome_completo'), 'responsaveis', ['nome_completo'], unique=False)
    op.create_index(op.f('ix_responsaveis_id'), 'responsaveis', ['id'], unique=False)
    op.create_index(op.f('ix_responsaveis_cpf'), 'responsaveis', ['cpf'], unique=True)
    op.create_table('idosos',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('idosos_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nome_completo', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cpf', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('data_nascimento', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('quarto', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('id_responsavel', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_responsavel'], ['responsaveis.id'], name='idosos_id_responsavel_fkey'),
    sa.PrimaryKeyConstraint('id', name='idosos_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_idosos_nome_completo'), 'idosos', ['nome_completo'], unique=False)
    op.create_index(op.f('ix_idosos_id'), 'idosos', ['id'], unique=False)
    op.create_index(op.f('ix_idosos_cpf'), 'idosos', ['cpf'], unique=True)
    op.create_table('administracao_log',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('data_hora_administracao', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id_prescricao', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_prescricao'], ['prescricoes.id'], name=op.f('administracao_log_id_prescricao_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('administracao_log_pkey'))
    )
    op.create_index(op.f('ix_administracao_log_id'), 'administracao_log', ['id'], unique=False)
    # ### end Alembic commands ###
